# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file is used to show how to write configuration files and can be used to test.

setup:
  env: kind
  file: kind.yaml
  init-system-environment: ../../../base/env
  kind:
    import-images:
      - apache/skywalking-rover:latest
    expose-ports:
      - namespace: istio-system
        resource: service/skywalking-ui
        port: 80
  steps:
    - name: set PATH
      command: export PATH=/tmp/skywalking-infra-e2e/bin:$PATH
    - name: install swctl
      command: bash test/e2e/base/scripts/prepare/setup-e2e-shell/install.sh swctl
    - name: install kubectl
      command: bash test/e2e/base/scripts/prepare/setup-e2e-shell/install.sh kubectl
    - name: install istio
      command: |
        bash test/e2e/base/scripts/prepare/setup-e2e-shell/install.sh istioctl
        istioctl install -y --set profile=demo
        kubectl label namespace default istio-injection=enabled
    - name: Install helm
      command: bash test/e2e/base/scripts/prepare/setup-e2e-shell/install.sh helm
    - name: Install SkyWalking
      command: |
        rm -rf skywalking-kubernetes && git clone https://github.com/apache/skywalking-kubernetes.git
        cd skywalking-kubernetes
        git reset --hard $SW_KUBERNETES_COMMIT_SHA
        cd chart
        helm dep up skywalking
        helm -n istio-system install skywalking skywalking \
                       --set fullnameOverride=skywalking \
                       --set elasticsearch.replicas=1 \
                       --set elasticsearch.minimumMasterNodes=1 \
                       --set elasticsearch.imageTag=7.5.1 \
                       --set oap.replicas=1 \
                       --set ui.image.repository=ghcr.io/apache/skywalking/ui \
                       --set ui.image.tag=${SW_OAP_COMMIT} \
                       --set oap.image.tag=${SW_OAP_COMMIT} \
                       --set oap.image.repository=ghcr.io/apache/skywalking/oap \
                       --set oap.storageType=elasticsearch
      wait:
        - namespace: istio-system
          resource: deployments/skywalking-oap
          for: condition=available
    - name: Deploy demo services
      command: |
        kubectl apply -f https://raw.githubusercontent.com/istio/istio/$ISTIO_VERSION/samples/bookinfo/platform/kube/bookinfo.yaml
        kubectl apply -f https://raw.githubusercontent.com/istio/istio/$ISTIO_VERSION/samples/bookinfo/networking/bookinfo-gateway.yaml
        kubectl apply -f https://raw.githubusercontent.com/istio/istio/$ISTIO_VERSION/samples/bookinfo/networking/destination-rule-all.yaml
        kubectl apply -f https://raw.githubusercontent.com/istio/istio/$ISTIO_VERSION/samples/bookinfo/networking/virtual-service-all-v1.yaml
      wait:
        - namespace: default
          resource: pod
          for: condition=Ready
    - name: Install SkyWalking Rover
      command: |
        envsubst < test/e2e/cases/process/istio/rover.yaml | kubectl apply -f -
      wait:
        - namespace: default
          resource: pod
          for: condition=Ready
  timeout: 25m

verify:
  retry:
    count: 20
    interval: 10s
  cases:
    # service list
    - query: swctl --display yaml --base-url=http://${service_skywalking_ui_host}:${service_skywalking_ui_80}/graphql service ls
      expected: expected/service.yml
    # service instance list
    - query: swctl --display yaml --base-url=http://${service_skywalking_ui_host}:${service_skywalking_ui_80}/graphql instance list --service-name=default::productpage
      expected: expected/service-instance.yml
    # process list
    - query: |
        swctl --display yaml --base-url=http://${service_skywalking_ui_host}:${service_skywalking_ui_80}/graphql process list --service-name=default::productpage --instance-name=$( \
          swctl --display yaml --base-url=http://${service_skywalking_ui_host}:${service_skywalking_ui_80}/graphql instance list --service-name=default::productpage |yq e '.[0].name' - \
        )
      expected: expected/process.yml
