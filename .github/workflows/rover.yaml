# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI

on:
  pull_request:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Check License
        uses: apache/skywalking-eyes@9bd5feb86b5817aa6072b008f9866a2c3bbc8587
      - name: Get dependencies
        run: make deps
      - name: Test
        run: make container-test
      - name: BTF Generate
        run: make container-btfgen
      - name: Lint
        run: make container-lint
      - name: Make binary
        run: make linux
      - name: Check CI Consistency
        run: make check

  docker:
    name: Docker images
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build and save docker images
        run: |
          make docker
          docker save -o docker-images-skywalking-rover.tar apache/skywalking-rover:latest
      - name: Upload docker images
        uses: actions/upload-artifact@v2
        with:
          name: docker-images-skywalking-rover
          path: docker-images-skywalking-rover.tar

  e2e-test:
    name: E2E test
    needs: [ docker ]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        test:
          - name: Golang On CPU Profiling
            config: test/e2e/cases/profiling/oncpu/golang/e2e.yaml
          - name: C++ On CPU Profiling
            config: test/e2e/cases/profiling/oncpu/c++/e2e.yaml
          - name: C On CPU Profiling
            config: test/e2e/cases/profiling/oncpu/c/e2e.yaml
          - name: Rust On CPU Profiling
            config: test/e2e/cases/profiling/oncpu/rust/e2e.yaml

          - name: Golang Off CPU Profiling
            config: test/e2e/cases/profiling/offcpu/golang/e2e.yaml
          - name: C++ Off CPU Profiling
            config: test/e2e/cases/profiling/offcpu/c++/e2e.yaml
          - name: C Off CPU Profiling
            config: test/e2e/cases/profiling/offcpu/c/e2e.yaml
          - name: Rust Off CPU Profiling
            config: test/e2e/cases/profiling/offcpu/rust/e2e.yaml

          - name: go2sky Agent Sensor
            config: test/e2e/cases/process/agent_sensor/golang/e2e.yaml

          - name: Istio Process Finder 1.8.2
            config: test/e2e/cases/process/istio/e2e.yaml
            env: ISTIO_VERSION=1.8.2
          - name: Istio Process Finder 1.9.1
            config: test/e2e/cases/process/istio/e2e.yaml
            env: ISTIO_VERSION=1.9.1
          - name: Istio Process Finder 1.10.3
            config: test/e2e/cases/process/istio/e2e.yaml
            env: ISTIO_VERSION=1.10.3
          - name: Istio Process Finder 1.11.4
            config: test/e2e/cases/process/istio/e2e.yaml
            env: ISTIO_VERSION=1.11.4
          - name: Istio Process Finder 1.12.0
            config: test/e2e/cases/process/istio/e2e.yaml
            env: ISTIO_VERSION=1.12.0
          - name: Istio Process Finder 1.13.1
            config: test/e2e/cases/process/istio/e2e.yaml
            env: ISTIO_VERSION=1.13.1
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v2
        name: Download docker images
        with:
          name: docker-images-skywalking-rover
          path: docker-images
      - name: Load docker images
        run: find docker-images -name "*.tar" -exec docker load -i {} \;
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Set env var
        run: echo "${{ matrix.test.env }}"  >> $GITHUB_ENV
      - name: ${{ matrix.test.name }}
        uses: apache/skywalking-infra-e2e@main
        with:
          e2e-file: $GITHUB_WORKSPACE/${{ matrix.test.config }}
      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        name: Upload Logs
        with:
          name: logs
          path: "${{ env.SW_INFRA_E2E_LOG_DIR }}"


  https-e2e-test:
    name: HTTPS E2E test
    needs: [ docker ]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        test:
          - name: Golang Profiling
            config: test/e2e/cases/profiling/network/golang/e2e.yaml
          - name: Python Profiling
            config: test/e2e/cases/profiling/network/golang/e2e.yaml
          - name: Envoy Profiling
            config: test/e2e/cases/profiling/network/envoy/e2e.yaml
            env: ISTIO_VERSION=1.13.1
          - name: C++ Profiling
            config: test/e2e/cases/profiling/network/c_plus_plus/e2e.yaml
          - name: Nodejs Profiling
            config: test/e2e/cases/profiling/network/nodejs/e2e.yaml
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v2
        name: Download docker images
        with:
          name: docker-images-skywalking-rover
          path: docker-images
      - name: Load docker images
        run: find docker-images -name "*.tar" -exec docker load -i {} \;
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Set env var
        run: echo "${{ matrix.test.env }}"  >> $GITHUB_ENV
      - name: Setup SSL Certs
        run: |
          bash test/e2e/cases/profiling/network/base/ssl/gen-selfsigned-ssl.sh service
          bash test/e2e/cases/profiling/network/base/ssl/gen-selfsigned-ssl.sh proxy
      - name: ${{ matrix.test.name }}
        uses: apache/skywalking-infra-e2e@main
        with:
          e2e-file: $GITHUB_WORKSPACE/${{ matrix.test.config }}
      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        name: Upload Logs
        with:
          name: logs
          path: "${{ env.SW_INFRA_E2E_LOG_DIR }}"

  required:
    if: always()
    name: Required
    needs:
      - build
      - e2e-test
      - https-e2e-test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Merge Requirement
        run: |
          if [[ ${{ needs.build.result }} != 'success' ]]; then
            exit -1
          fi
          if [[ ${{ needs.e2e-test.result }} != 'success' ]]; then
            exit -1
          fi
          if [[ ${{ needs.https-e2e-test.result }} != 'success' ]]; then
            exit -1
          fi